# Yandex / Хендбуки / Основы Python
# 2.2. Условный оператор


def p_2_2_a():
    username = input("Как Вас зовут?\n")
    print(f"Здравствуйте, {username}!")
    howareyou = input("Как дела?\n")
    print("Я за Вас рада!" if "хорошо" in howareyou else "Всё наладится!")


def p_2_2_b():
    """
    В главной велогонке года участвуют более тысячи гонщиков, которые
    должны пройти трассу длиной 43872 метра. Задача — определить победителя.
    Нам известны средние скорости двух фаворитов — Пети и Васи. Помогите
    узнать, кто из них пришёл к финишу первым.
    Формат ввода
    В первой строке записана средняя скорость Пети.
    Во второй — Васи.
    Формат вывода
    Имя победителя гонки.
    Примечание
    Гарантируется, что победителем стал только один.
    """
    print("Петя" if int(input()) > int(input()) else "Вася")


def p_2_2_с():
    """
    Три велогонщика снова хотят узнать, кто из них быстрее. Им предстоит
    пройти трассу длиной 43872 метра, и нам нужно определить,
    кто из них пришёл к финишу первым.
    Нам известны средние скорости трёх фаворитов — Пети, Васи и Толи.
    Кто из них финишировал первым?
    Формат ввода
    В первой строке записана средняя скорость Пети.
    Во второй — Васи. В третьей — Толи.
    Формат вывода
    Имя победителя гонки.
    Примечание
    Гарантируется, что победителем стал только один.
    """
    rider1, rider2, rider3 = (int(input()) for _ in range(3))
    if rider1 > rider2 and rider1 > rider3:
        print("Петя")
    elif rider2 > rider3:
        print("Вася")
    else:
        print("Толя")


def p_2_2_d():
    """
    Время подвести итоги гонки и объявить победителя!
    Длина трассы — 43872 метра, и нам известны средние скорости
    трёх фаворитов: Пети, Васи и Толи.
    Ваша задача — сравнить результаты гонщиков и вывести имя победителя.
    Формат ввода
    В первой строке записана средняя скорость Пети.
    Во второй — Васи. В третьей — Толи.
    Формат вывода
    Имена победителей в порядке занятых мест.
    """
    rider1, rider2, rider3 = (int(input()) for _ in range(3))
    if rider1 >= rider2 and rider1 >= rider3:
        if rider2 >= rider3:
            print("1. Петя\n2. Вася\n3. Толя")
        else:
            print("1. Петя\n2. Толя\n3. Вася")
    elif rider2 >= rider1 and rider2 >= rider3:
        if rider1 >= rider3:
            print("1. Вася\n2. Петя\n3. Толя")
        else:
            print("1. Вася\n2. Толя\n3. Петя")
    else:
        if rider1 >= rider2:
            print("1. Толя\n2. Петя\n3. Вася")
        else:
            print("1. Толя\n2. Вася\n3. Петя")


def p_2_2_e():
    """
    У Пети было 7 яблок, а у Васи 6.
    Затем Петя отдал 3 яблока Васе, а у Толи взял 2 яблока.
    Вася попросил у Толи 5 яблок, но отдал Гене 2.
    Затем Дима дал Пете N яблок, а Васе M.
    Так у кого в итоге яблок больше — у Пети или Васи?
    Формат ввода
    В первой строке записано натуральное число N. Во второй — M.
    Формат вывода
    Имя ребёнка, у которого больше яблок.
    """
    p, v = 7, 6
    n, m = int(input()), int(input())
    p = p - 3 + 2 + n
    v = v + 3 + 5 - 2 + m
    print("Петя" if p > v else "Вася")


def p_2_2_f():
    """
    Вася любит полениться. Особенно ему нравится, когда в году появляется
    такой лишний денёк, которого обычно не бывает.
    Напишите программу, которая поможет Васе определить, удастся ли ему
    побездельничать в определённом году или нет.
    Формат ввода Одно число — год.
    Формат вывода Одно слово «YES» (удастся) или «NO» (не удастся).
    """
    year = int(input())
    print("YES" if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0) else "NO")


def p_2_2_g():
    """
    Палиндром - это число, слово, предложение и так далее, которое и
    слева-направо, и справа-налево читается одинаково.
    А как быстро понять, является ли слово палиндромом? Написать программу
    для проверки этого! В этом нам снова поможет условный оператор.
    Формат ввода Одно четырёхзначное число
    Формат вывода YES если число является палиндромом, иначе — NO.
    """
    num = int(input())
    if num // 1000 == num % 10 and (num // 100 % 10 == num // 10 % 10):
        print("YES")
    else:
        print("NO")


def p_2_2_h():
    """
    Давайте сыграем! С помощью условного оператора if-else и
    оператора in проверим, не спрятался ли зайка в введённом предложении
    Формат ввода Строка описывающая придорожную местность.
    Формат вывода YES — если в этой местности есть зайка, иначе — NO.
    """
    print("YES" if "зайка" in input().lower() else "NO")


def p_2_2_i():
    """
    Кто пойдёт первым? В настольных играх очередность часто определяется
    жребием, но мы будем использовать порядок букв!
    Давайте сравним имена игроков лексикографически и с помощью условных
    операторов определим, кто начнёт игру.
    Формат ввода Три имени игроков, каждое из которых записано с новой строки.
    Формат вывода Имя игрока, который будет ходить первым.
    """
    print(min(input(), input(), input()))


def p_2_2_j():
    """
    Коля решил зашифровать свои пароли, чтобы Аня не смогла их подсмотреть
    в блокноте. Для этого он берёт изначальный пароль — трёхзначное число
    — и превращает его в новое, следуя таким правилам:
    Сначала находит сумму двух младших цифр (десятков и единиц).
    Затем находит сумму двух старших цифр (сотен и десятков).
    Эти суммы записываются в порядке не возрастания,
    образуя зашифрованное число.
    Помогите реализовать алгоритм шифрования, используя базовое
    применение условного оператора if-else.
    Формат ввода Одно трёхзначное число
    Формат вывода Результат шифрования
    """
    pswd = int(input())
    num1, num2 = (pswd // 10 % 10) + pswd % 10, pswd // 100 + (pswd // 10 % 10)
    print(f"{num1}{num2}" if num1 > num2 else f"{num2}{num1}")


def p_2_2_k():
    """
    Согласно одному древнему поверью, трёхзначное число считается красивым,
    если сумма его минимальной и максимальной цифр равна
    оставшейся цифре умноженной на 2.
    Напишите программу, которая проверяет, является ли число красивым.
    Формат ввода Одно трёхзначное число
    Формат вывода YES — если число красивое, иначе — NO
    """
    n1, n2, n3 = sorted(int(x) for x in input())
    print("YES" if n1 + n3 == n2 * 2 else "NO")


def p_2_2_l():
    """
    Вася обожает треугольники и решил попробовать сделать один
    самостоятельно. У него есть несколько алюминиевых трубочек разной длины,
    и он хочет узнать, можно ли из них собрать треугольник. Помогите Васе
    определить, можно ли из трёх данных отрезков создать треугольник.
    Формат ввода  Три числа — длины трубочек, каждое с новой строки.
    Формат вывода YES — если Васе удастся создать музыкальный треугольник,
    иначе — NO
    """
    t1, t2, t3 = (int(input()) for _ in range(3))
    print("YES" if t1 + t2 > t3 and t2 + t3 > t1 and t3 + t1 > t2 else "NO")


def p_2_2_m():
    """
    Во времена магии и драконов ходили легенды о числах,
    обладающих великой силой, способной изменить мир.
    Три числа были даны эльфам, семь — гномам,
    а девять достались человеческому роду.
    Но все они были обмануты... Потому что существовало ещё одно число.
    В стране Нумия, на бумаге из тёмного папируса, властелин Зерон тайно
    записал Единую Цифру, подчиняющую себе все великие числа.
    Давайте выясним, что это за цифра!
    Формат ввода В первой строке записано двузначное число одного из эльфов.
    Во второй строке — Гномов.     В третьей — Людей.
    Формат вывода Одна цифра — общая у всех трёх чисел в одинаковой позиции
    """
    en, gn, hn = (int(input()) for _ in range(3))
    print(en % 10 if en % 10 == gn % 10 == hn % 10 else en // 10)


def p_2_2_n():
    """
    Во времена, когда люди верили в магическую силу чисел,
    волшебник Пифуман предал все народы и встал на сторону Зерона.
    Теперь, чтобы проникнуть в башни обоих злодеев одновременно,
    нужно разделить силу числа, которое защищало нас в дороге.
    Для этого возьмём трёхзначное число и составим из него минимальное
    и максимальное возможные двухзначные числа.
    Формат ввода Одно трёхзначное число.
    Формат вывода Два защитных числа для каждого отряда через пробел.
    """
    n1, n2, n3 = sorted(int(x) for x in input())
    print(n1 * 10 + n2 if n1 != 0 else n2 * 10 + n1, n3 * 10 + n2)


def p_2_2_o():
    """
    Нам нужно создать трёхзначное магическое число, которое будет сильнее
    двух защитных чисел Зерона. Как его составить?
    Первая цифра — максимальная из всех защитных чисел.
    Последняя цифра — минимальная.
    Средняя цифра — сумма оставшихся цифр без учёта переноса разряда.
    Формат ввода В двух строках записаны защитные числа Зерона.
    Формат вывода Одно трёхзначное число, которое приведёт к победе.
    """
    n11, n12 = sorted(int(x) for x in input())
    n21, n22 = sorted(int(x) for x in input())
    max_n = max(n11, n12, n21, n22)
    min_n = min(n11, n12, n21, n22)
    mid_n = (n11 + n12 + n21 + n22) - (max_n + min_n)
    print(max_n, mid_n % 10, min_n, sep="")


def p_2_2_p():
    """
    В новом сезоне за первенство в велогонках снова сражаются сильнейшие.
    Протяжённость финальной трассы — 43872м, и все хотят узнать,
    кто первым пересечёт финишную черту.
    Нам известны средние скорости трёх претендентов —
    Пети, Васи и Толи. Кто станет победителем?
    Формат ввода В первой строке записана средняя скорость Пети.
    Во второй — Васи. В третьей — Толи.
    Формат вывода Красивый пьедестал (ширина ступеней 8 символов).
    """
    rider1, rider2, rider3 = (int(input()) for _ in range(3))
    if rider1 >= rider2 and rider1 >= rider3:
        win1 = "Петя"
        win2, win3 = ("Вася", "Толя") if rider2 >= rider3 else ("Толя", "Вася")

    elif rider2 >= rider1 and rider2 >= rider3:
        win1 = "Вася"
        win2, win3 = ("Петя", "Толя") if rider1 >= rider3 else ("Толя", "Петя")
    else:
        win1 = "Толя"
        win2, win3 = ("Петя", "Вася") if rider1 >= rider2 else ("Вася", "Петя")
    print(f"{' '*8}{win1:^8}{' '*8}")
    print(f"{win2:^8}{' '*8}{' '*8}")
    print(f"{' '*8}{' '*8}{win3:^8}")
    print("   II      I      III   ")


def p_2_2_q():
    """
    Знаете ли вы, что Python изначально создавался для решения математических
    задач? Давайте воспользуемся его возможностями и найдём корни уравнения,
    используя составные условные операции.
    Формат ввода Вводится 3 вещественных числа a, b,c — коэффициенты уравнения ax^2+bx+c=0.
    Формат вывода
    Если у уравнения нет решений — следует вывести «No solution».
    Если корней конечное число — их нужно вывести через
    пробел в порядке возрастания с точностью до сотых.
    Если корней неограниченное число — следует вывести «Infinite solutions».
    Примечание Обратите внимание: ограничения на значения коэффициентов отсутствуют.
    """
    a, b, c = (float(input()) for _ in range(3))
    if a == 0:
        if b == 0:
            if c == 0:
                print("Infinite solutions")
            else:
                print("No solution")
        else:
            x = -c / b
            print(f"{x:.2f}")
    else:
        d = b**2 - 4 * a * c
        if d < 0:
            print("No solution")
        elif d == 0:
            x = -b / (2 * a)
            print(f"{x:.2f}")
        else:
            x1 = (-b + d**0.5) / (2 * a)
            x2 = (-b - d**0.5) / (2 * a)
            print(f"{min(x1, x2):.2f} {max(x1, x2):.2f}")


def p_2_2_r():
    """
    В давние времена верили, что если местность имеет
    форму треугольника, то в ней может скрываться страшное зло.
    При этом риск столкнуться с ним зависел от формы треугольника:
    Остроугольный — вероятность встречи со злом крайне мала.
    Тупоугольный — опасность велика.
    Прямоугольный — вероятность 100%!
    Напишите программу, которая определяет вероятность встретить зло
    по длинам сторон треугольника.
    Воспользуйтесь для этого составными условными операциями.
    Формат ввода  Три числа — длины сторон треугольной местности.
    Формат вывода Вероятность встретить зло согласно поверью:
    крайне мала; велика; 100%.
    """
    a, b, c = sorted(float(input()) for _ in range(3))
    if a**2 + b**2 == c**2:
        res = "100%"
    elif a**2 + b**2 < c**2:
        res = "велика"
    else:
        res = "крайне мала"
    print(res)


def p_2_2_s():
    """
    Группа исследователей готовится к высадке на остров идеальной формы,
    но спутниковая разведка обнаружила на нём зону зыбучих песков.
    Чтобы обеспечить безопасность экспедиции, разработана система оповещения,
    которая предупреждает об опасности в зависимости от координат исследователя.
    Для снижения расходов было решено создать программное обеспечение,
    которое автоматически определит, безопасна ли точка местонахождения исследователя.
    Напишите программу, которая по заданным координатам проверит,
    находится ли исследователь в зоне опасности, учитывая несколько условий одновременно.
    Формат ввода Два рациональных числа — координаты исследователя.
    Формат вывода     Одно из сообщений:
    Опасность! Покиньте зону как можно скорее!
    Зона безопасна. Продолжайте работу.
    Вы вышли в море и рискуете быть съеденным акулой!
    """
    x, y = float(input()), float(input())
    if x**2 + y**2 > 100:
        res = "Вы вышли в море и рискуете быть съеденным акулой!"
    elif (
        y <= 5
        and 4 * y >= (x + 1) ** 2 - 36
        and x**2 + y**2 <= 25
        and 3 * y <= 5 * x + 35
    ):
        res = "Опасность! Покиньте зону как можно скорее!"
    else:
        res = "Зона безопасна. Продолжайте работу."
    print(res)


def p_2_2_t():
    """
    По пути домой родители снова решили сыграть с детьми в поиск зверушек.
    Но на этот раз задача сложнее — нужно не просто найти зайку,
    а выбрать правильную строку по определённым условиям.
    Вам предстоит проверить три строки, найти среди них ту,
    где встречается слово "зайка", и вывести её вместе с её длиной.
    Если таких строк несколько, выберите наименьшую в алфавитном порядке.
    Для этого используйте составные условные операции,
    чтобы одновременно учесть несколько условий.
    Формат ввода Три строки описывающих придорожную местность.
    Формат вывода Строка в которой есть зайка, а затем её длина.
    Если таких строк несколько, выбрать ту, что меньше всех лексикографически.
    """
    s1, s2, s3 = sorted(input() for _ in range(3))
    if "зайка" in s1:
        res = s1
    elif "зайка" in s2:
        res = s2
    else:
        res = s3
    print(res, len(res))
